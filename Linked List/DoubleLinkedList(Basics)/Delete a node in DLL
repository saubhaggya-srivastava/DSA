/**
 * Definition of doubly linked list:
 *
 * struct Node {
 *      int data;
 *      Node *prev;
 *      Node *next;
 *      Node() : data(0), prev(nullptr), next(nullptr) {}
 *      Node(int val) : data(val), prev(nullptr), next(nullptr) {}
 *      Node(int val, Node *p, Node *n) : data(val), prev(p), next(n) {}
 * };
 *
 *************************************************************************/

Node* deleteLastNode(Node* head) {
    // Check if the list is empty
    if (head == nullptr) {
        return nullptr;
    }

    // If there is only one node in the list
    if (head->next == nullptr) {
        delete head;
        return nullptr;
    }

    Node* temp = head;

    // Traverse to the last node
    while (temp->next != NULL) {
        temp = temp->next;
    }

    // Adjust pointers and delete the last node
    Node* prev1 = temp->prev;
    prev1->next = nullptr;
    delete temp;

    return head;
}
